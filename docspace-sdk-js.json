{
	"id": 0,
	"name": "@onlyoffice/docspace-sdk-js",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 303,
			"name": "Enums",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 315,
					"name": "EditorType",
					"variant": "declaration",
					"kind": 8,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Types of editors available"
							}
						]
					},
					"children": [
						{
							"id": 316,
							"name": "Desktop",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Desktop editor"
									}
								]
							},
							"sources": [
								{
									"fileName": "enums/index.ts",
									"line": 52,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "desktop"
							}
						},
						{
							"id": 317,
							"name": "Embedded",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Embedded editor"
									}
								]
							},
							"sources": [
								{
									"fileName": "enums/index.ts",
									"line": 54,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "embedded"
							}
						},
						{
							"id": 318,
							"name": "Mobile",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Mobile editor"
									}
								]
							},
							"sources": [
								{
									"fileName": "enums/index.ts",
									"line": 56,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "mobile"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								316,
								317,
								318
							]
						}
					],
					"sources": [
						{
							"fileName": "enums/index.ts",
							"line": 50,
							"character": 18
						}
					]
				},
				{
					"id": 330,
					"name": "FilterSortBy",
					"variant": "declaration",
					"kind": 8,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Criteria for filtering and sorting items"
							}
						]
					},
					"children": [
						{
							"id": 331,
							"name": "Author",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sort by author"
									}
								]
							},
							"sources": [
								{
									"fileName": "enums/index.ts",
									"line": 98,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "Author"
							}
						},
						{
							"id": 332,
							"name": "CreationDate",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sort by creation date"
									}
								]
							},
							"sources": [
								{
									"fileName": "enums/index.ts",
									"line": 100,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "DateAndTimeCreation"
							}
						},
						{
							"id": 333,
							"name": "LastOpened",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sort by last opened date"
									}
								]
							},
							"sources": [
								{
									"fileName": "enums/index.ts",
									"line": 102,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "LastOpened"
							}
						},
						{
							"id": 334,
							"name": "ModifiedDate",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sort by modification date"
									}
								]
							},
							"sources": [
								{
									"fileName": "enums/index.ts",
									"line": 104,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "DateAndTime"
							}
						},
						{
							"id": 335,
							"name": "Name",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sort by name"
									}
								]
							},
							"sources": [
								{
									"fileName": "enums/index.ts",
									"line": 106,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "AZ"
							}
						},
						{
							"id": 336,
							"name": "Room",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sort by room"
									}
								]
							},
							"sources": [
								{
									"fileName": "enums/index.ts",
									"line": 108,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "Room"
							}
						},
						{
							"id": 337,
							"name": "RoomType",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sort by room type"
									}
								]
							},
							"sources": [
								{
									"fileName": "enums/index.ts",
									"line": 110,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "roomType"
							}
						},
						{
							"id": 338,
							"name": "Size",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sort by size"
									}
								]
							},
							"sources": [
								{
									"fileName": "enums/index.ts",
									"line": 112,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "Size"
							}
						},
						{
							"id": 339,
							"name": "Tags",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sort by tags"
									}
								]
							},
							"sources": [
								{
									"fileName": "enums/index.ts",
									"line": 114,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "Tags"
							}
						},
						{
							"id": 340,
							"name": "Type",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sort by type"
									}
								]
							},
							"sources": [
								{
									"fileName": "enums/index.ts",
									"line": 116,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "Type"
							}
						},
						{
							"id": 341,
							"name": "UsedSpace",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sort by used space"
									}
								]
							},
							"sources": [
								{
									"fileName": "enums/index.ts",
									"line": 118,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "usedspace"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								331,
								332,
								333,
								334,
								335,
								336,
								337,
								338,
								339,
								340,
								341
							]
						}
					],
					"sources": [
						{
							"fileName": "enums/index.ts",
							"line": 96,
							"character": 18
						}
					]
				},
				{
					"id": 327,
					"name": "FilterSortOrder",
					"variant": "declaration",
					"kind": 8,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sort order for filtering"
							}
						]
					},
					"children": [
						{
							"id": 328,
							"name": "Ascending",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Ascending order"
									}
								]
							},
							"sources": [
								{
									"fileName": "enums/index.ts",
									"line": 88,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "ascending"
							}
						},
						{
							"id": 329,
							"name": "Descending",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Descending order"
									}
								]
							},
							"sources": [
								{
									"fileName": "enums/index.ts",
									"line": 90,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "descending"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								328,
								329
							]
						}
					],
					"sources": [
						{
							"fileName": "enums/index.ts",
							"line": 86,
							"character": 18
						}
					]
				},
				{
					"id": 342,
					"name": "HeaderBannerDisplaying",
					"variant": "declaration",
					"kind": 8,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Header banner display options"
							}
						]
					},
					"children": [
						{
							"id": 343,
							"name": "All",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Display all header banners"
									}
								]
							},
							"sources": [
								{
									"fileName": "enums/index.ts",
									"line": 126,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "all"
							}
						},
						{
							"id": 344,
							"name": "Info",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Display only informational header banners"
									}
								]
							},
							"sources": [
								{
									"fileName": "enums/index.ts",
									"line": 128,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "info"
							}
						},
						{
							"id": 345,
							"name": "None",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Do not display any header banners"
									}
								]
							},
							"sources": [
								{
									"fileName": "enums/index.ts",
									"line": 130,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "none"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								343,
								344,
								345
							]
						}
					],
					"sources": [
						{
							"fileName": "enums/index.ts",
							"line": 124,
							"character": 18
						}
					]
				},
				{
					"id": 346,
					"name": "InstanceMethods",
					"variant": "declaration",
					"kind": 8,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Available instance methods in the SDK for file management, user info, and settings"
							}
						]
					},
					"children": [
						{
							"id": 347,
							"name": "AddTagsToRoom",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Add tags to a room"
									}
								]
							},
							"sources": [
								{
									"fileName": "enums/index.ts",
									"line": 138,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "addTagsToRoom"
							}
						},
						{
							"id": 348,
							"name": "CreateFile",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create a new file"
									}
								]
							},
							"sources": [
								{
									"fileName": "enums/index.ts",
									"line": 140,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "createFile"
							}
						},
						{
							"id": 349,
							"name": "CreateFolder",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create a new folder"
									}
								]
							},
							"sources": [
								{
									"fileName": "enums/index.ts",
									"line": 142,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "createFolder"
							}
						},
						{
							"id": 350,
							"name": "CreateHash",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create a hash"
									}
								]
							},
							"sources": [
								{
									"fileName": "enums/index.ts",
									"line": 144,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "createHash"
							}
						},
						{
							"id": 351,
							"name": "CreateRoom",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create a new room"
									}
								]
							},
							"sources": [
								{
									"fileName": "enums/index.ts",
									"line": 146,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "createRoom"
							}
						},
						{
							"id": 352,
							"name": "CreateTag",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create a new tag"
									}
								]
							},
							"sources": [
								{
									"fileName": "enums/index.ts",
									"line": 148,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "createTag"
							}
						},
						{
							"id": 361,
							"name": "GetEditorInstance",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get editor instance"
									}
								]
							},
							"sources": [
								{
									"fileName": "enums/index.ts",
									"line": 166,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "getEditorInstance"
							}
						},
						{
							"id": 353,
							"name": "GetFiles",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get files list"
									}
								]
							},
							"sources": [
								{
									"fileName": "enums/index.ts",
									"line": 150,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "getFiles"
							}
						},
						{
							"id": 354,
							"name": "GetFolderInfo",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get folder information"
									}
								]
							},
							"sources": [
								{
									"fileName": "enums/index.ts",
									"line": 152,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "getFolderInfo"
							}
						},
						{
							"id": 355,
							"name": "GetFolders",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get folders list"
									}
								]
							},
							"sources": [
								{
									"fileName": "enums/index.ts",
									"line": 154,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "getFolders"
							}
						},
						{
							"id": 356,
							"name": "GetHashSettings",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get hash settings"
									}
								]
							},
							"sources": [
								{
									"fileName": "enums/index.ts",
									"line": 156,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "getHashSettings"
							}
						},
						{
							"id": 357,
							"name": "GetList",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get general list"
									}
								]
							},
							"sources": [
								{
									"fileName": "enums/index.ts",
									"line": 158,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "getList"
							}
						},
						{
							"id": 358,
							"name": "GetRooms",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get rooms list"
									}
								]
							},
							"sources": [
								{
									"fileName": "enums/index.ts",
									"line": 160,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "getRooms"
							}
						},
						{
							"id": 359,
							"name": "GetSelection",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get current selection"
									}
								]
							},
							"sources": [
								{
									"fileName": "enums/index.ts",
									"line": 162,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "getSelection"
							}
						},
						{
							"id": 360,
							"name": "GetUserInfo",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get user information"
									}
								]
							},
							"sources": [
								{
									"fileName": "enums/index.ts",
									"line": 164,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "getUserInfo"
							}
						},
						{
							"id": 362,
							"name": "Login",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Perform login"
									}
								]
							},
							"sources": [
								{
									"fileName": "enums/index.ts",
									"line": 168,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "login"
							}
						},
						{
							"id": 363,
							"name": "Logout",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Perform logout"
									}
								]
							},
							"sources": [
								{
									"fileName": "enums/index.ts",
									"line": 170,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "logout"
							}
						},
						{
							"id": 364,
							"name": "OpenModal",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Open a modal"
									}
								]
							},
							"sources": [
								{
									"fileName": "enums/index.ts",
									"line": 172,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "openModal"
							}
						},
						{
							"id": 365,
							"name": "RemoveTagsFromRoom",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Remove tags from a room"
									}
								]
							},
							"sources": [
								{
									"fileName": "enums/index.ts",
									"line": 174,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "removeTagsFromRoom"
							}
						},
						{
							"id": 366,
							"name": "SetConfig",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set configuration"
									}
								]
							},
							"sources": [
								{
									"fileName": "enums/index.ts",
									"line": 176,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "setConfig"
							}
						},
						{
							"id": 367,
							"name": "SetListView",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set list view"
									}
								]
							},
							"sources": [
								{
									"fileName": "enums/index.ts",
									"line": 178,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "setListView"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								347,
								348,
								349,
								350,
								351,
								352,
								361,
								353,
								354,
								355,
								356,
								357,
								358,
								359,
								360,
								362,
								363,
								364,
								365,
								366,
								367
							]
						}
					],
					"sources": [
						{
							"fileName": "enums/index.ts",
							"line": 136,
							"character": 18
						}
					]
				},
				{
					"id": 319,
					"name": "ManagerViewMode",
					"variant": "declaration",
					"kind": 8,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "View modes available in the manager"
							}
						]
					},
					"children": [
						{
							"id": 320,
							"name": "Row",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Row view"
									}
								]
							},
							"sources": [
								{
									"fileName": "enums/index.ts",
									"line": 64,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "row"
							}
						},
						{
							"id": 321,
							"name": "Table",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Table view"
									}
								]
							},
							"sources": [
								{
									"fileName": "enums/index.ts",
									"line": 66,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "table"
							}
						},
						{
							"id": 322,
							"name": "Tile",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Tile view"
									}
								]
							},
							"sources": [
								{
									"fileName": "enums/index.ts",
									"line": 68,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "tile"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								320,
								321,
								322
							]
						}
					],
					"sources": [
						{
							"fileName": "enums/index.ts",
							"line": 62,
							"character": 18
						}
					]
				},
				{
					"id": 368,
					"name": "MessageTypes",
					"variant": "declaration",
					"kind": 8,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Types of messages"
							}
						]
					},
					"children": [
						{
							"id": 372,
							"name": "Error",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Error message"
									}
								]
							},
							"sources": [
								{
									"fileName": "enums/index.ts",
									"line": 192,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "error"
							}
						},
						{
							"id": 371,
							"name": "OnCallCommand",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Command call message"
									}
								]
							},
							"sources": [
								{
									"fileName": "enums/index.ts",
									"line": 190,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "onCallCommand"
							}
						},
						{
							"id": 370,
							"name": "OnEventReturn",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Event return message"
									}
								]
							},
							"sources": [
								{
									"fileName": "enums/index.ts",
									"line": 188,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "onEventReturn"
							}
						},
						{
							"id": 369,
							"name": "OnMethodReturn",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Method return message"
									}
								]
							},
							"sources": [
								{
									"fileName": "enums/index.ts",
									"line": 186,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "onMethodReturn"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								372,
								371,
								370,
								369
							]
						}
					],
					"sources": [
						{
							"fileName": "enums/index.ts",
							"line": 184,
							"character": 18
						}
					]
				},
				{
					"id": 304,
					"name": "SDKMode",
					"variant": "declaration",
					"kind": 8,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Available modes in the SDK"
							}
						]
					},
					"children": [
						{
							"id": 306,
							"name": "Editor",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Editor mode"
									}
								]
							},
							"sources": [
								{
									"fileName": "enums/index.ts",
									"line": 24,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "editor"
							}
						},
						{
							"id": 309,
							"name": "FileSelector",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "File selector mode"
									}
								]
							},
							"sources": [
								{
									"fileName": "enums/index.ts",
									"line": 30,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "file-selector"
							}
						},
						{
							"id": 305,
							"name": "Manager",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Manager mode"
									}
								]
							},
							"sources": [
								{
									"fileName": "enums/index.ts",
									"line": 22,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "manager"
							}
						},
						{
							"id": 308,
							"name": "RoomSelector",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Room selector mode"
									}
								]
							},
							"sources": [
								{
									"fileName": "enums/index.ts",
									"line": 28,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "room-selector"
							}
						},
						{
							"id": 310,
							"name": "System",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "System mode"
									}
								]
							},
							"sources": [
								{
									"fileName": "enums/index.ts",
									"line": 32,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "system"
							}
						},
						{
							"id": 307,
							"name": "Viewer",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Viewer mode"
									}
								]
							},
							"sources": [
								{
									"fileName": "enums/index.ts",
									"line": 26,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "viewer"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								306,
								309,
								305,
								308,
								310,
								307
							]
						}
					],
					"sources": [
						{
							"fileName": "enums/index.ts",
							"line": 20,
							"character": 18
						}
					]
				},
				{
					"id": 311,
					"name": "SelectorFilterType",
					"variant": "declaration",
					"kind": 8,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Types of filters that can be applied to a selector"
							}
						]
					},
					"children": [
						{
							"id": 312,
							"name": "All",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Show all items"
									}
								]
							},
							"sources": [
								{
									"fileName": "enums/index.ts",
									"line": 40,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "all"
							}
						},
						{
							"id": 313,
							"name": "RoomsOnly",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Show only rooms"
									}
								]
							},
							"sources": [
								{
									"fileName": "enums/index.ts",
									"line": 42,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "roomsOnly"
							}
						},
						{
							"id": 314,
							"name": "UserOnly",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Show only user folder"
									}
								]
							},
							"sources": [
								{
									"fileName": "enums/index.ts",
									"line": 44,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "userFolderOnly"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								312,
								313,
								314
							]
						}
					],
					"sources": [
						{
							"fileName": "enums/index.ts",
							"line": 38,
							"character": 18
						}
					]
				},
				{
					"id": 323,
					"name": "Theme",
					"variant": "declaration",
					"kind": 8,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Available application themes"
							}
						]
					},
					"children": [
						{
							"id": 324,
							"name": "Base",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Base theme"
									}
								]
							},
							"sources": [
								{
									"fileName": "enums/index.ts",
									"line": 76,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "Base"
							}
						},
						{
							"id": 325,
							"name": "Dark",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Dark theme"
									}
								]
							},
							"sources": [
								{
									"fileName": "enums/index.ts",
									"line": 78,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "Dark"
							}
						},
						{
							"id": 326,
							"name": "System",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "System theme"
									}
								]
							},
							"sources": [
								{
									"fileName": "enums/index.ts",
									"line": 80,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "System"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								324,
								325,
								326
							]
						}
					],
					"sources": [
						{
							"fileName": "enums/index.ts",
							"line": 74,
							"character": 18
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"children": [
						315,
						330,
						327,
						342,
						346,
						319,
						368,
						304,
						311,
						323
					]
				}
			],
			"sources": [
				{
					"fileName": "enums/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 148,
			"name": "Types",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 155,
					"name": "TBannerDisplaying",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Template literal type for header banner display options"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 59,
							"character": 12
						}
					],
					"type": {
						"type": "templateLiteral",
						"head": "",
						"tail": [
							[
								{
									"type": "reference",
									"target": 342,
									"name": "HeaderBannerDisplaying",
									"package": "@onlyoffice/docspace-sdk-js"
								},
								""
							]
						]
					}
				},
				{
					"id": 157,
					"name": "TEditorCustomization",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Editor customization configuration"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 67,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 158,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 159,
									"name": "anonymous",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Anonymous access configuration"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 69,
											"character": 2
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 160,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 162,
													"name": "label",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Label for anonymous access"
															}
														]
													},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 73,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 161,
													"name": "request",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Whether to request anonymous access"
															}
														]
													},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 71,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														162,
														161
													]
												}
											],
											"sources": [
												{
													"fileName": "types/index.ts",
													"line": 69,
													"character": 14
												}
											]
										}
									}
								},
								{
									"id": 163,
									"name": "autosave",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Enable/disable automatic saving"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 76,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 164,
									"name": "comments",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Enable/disable comments"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 78,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 165,
									"name": "compactHeader",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Enable/disable compact header"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 80,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 166,
									"name": "compactToolbar",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Enable/disable compact toolbar"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 82,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 167,
									"name": "compatibleFeatures",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Enable/disable compatibility features"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 84,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 168,
									"name": "forcesave",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Enable/disable force save"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 86,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 169,
									"name": "help",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Show/hide help"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 88,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 170,
									"name": "hideRightMenu",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Show/hide right menu"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 90,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 171,
									"name": "hideRulers",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Show/hide rulers"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 92,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 172,
									"name": "integrationMode",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Integration mode setting"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 94,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 173,
									"name": "macros",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Enable/disable macros"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 96,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 174,
									"name": "macrosMode",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Macros mode setting"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 98,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 175,
									"name": "mentionShare",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Enable/disable mention and share"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 100,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 176,
									"name": "mobileForceView",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Force mobile view"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 102,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 177,
									"name": "plugins",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Enable/disable plugins"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 104,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 178,
									"name": "toolbarHideFileName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Hide/show filename in toolbar"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 106,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 179,
									"name": "toolbarNoTabs",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Hide/show tabs in toolbar"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 108,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 180,
									"name": "uiTheme",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "UI theme setting"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 110,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 181,
									"name": "unit",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Measurement unit"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 112,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 182,
									"name": "zoom",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Zoom level"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 114,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										159,
										163,
										164,
										165,
										166,
										167,
										168,
										169,
										170,
										171,
										172,
										173,
										174,
										175,
										176,
										177,
										178,
										179,
										180,
										181,
										182
									]
								}
							],
							"sources": [
								{
									"fileName": "types/index.ts",
									"line": 67,
									"character": 35
								}
							]
						}
					}
				},
				{
					"id": 151,
					"name": "TEditorType",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Template literal type based on "
							},
							{
								"kind": "code",
								"text": "`EditorType`"
							},
							{
								"kind": "text",
								"text": " enum"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 47,
							"character": 12
						}
					],
					"type": {
						"type": "templateLiteral",
						"head": "",
						"tail": [
							[
								{
									"type": "reference",
									"target": 315,
									"name": "EditorType",
									"package": "@onlyoffice/docspace-sdk-js"
								},
								""
							]
						]
					}
				},
				{
					"id": 294,
					"name": "TEventReturnData",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Event return data structure"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 279,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 295,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 296,
									"name": "data",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Event data payload"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 281,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 297,
									"name": "event",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Event name"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 283,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										296,
										297
									]
								}
							],
							"sources": [
								{
									"fileName": "types/index.ts",
									"line": 279,
									"character": 31
								}
							]
						}
					}
				},
				{
					"id": 156,
					"name": "TFilterSortBy",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Template literal type representing filter sort options"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 62,
							"character": 12
						}
					],
					"type": {
						"type": "templateLiteral",
						"head": "",
						"tail": [
							[
								{
									"type": "reference",
									"target": 330,
									"name": "FilterSortBy",
									"package": "@onlyoffice/docspace-sdk-js"
								},
								""
							]
						]
					}
				},
				{
					"id": 154,
					"name": "TFilterSortOrder",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Template literal type representing filter sort order"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 56,
							"character": 12
						}
					],
					"type": {
						"type": "templateLiteral",
						"head": "",
						"tail": [
							[
								{
									"type": "reference",
									"target": 327,
									"name": "FilterSortOrder",
									"package": "@onlyoffice/docspace-sdk-js"
								},
								""
							]
						]
					}
				},
				{
					"id": 242,
					"name": "TFrameConfig",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Frame configuration"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 170,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 243,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 244,
									"name": "buttonColor",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Button color"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 172,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 245,
									"name": "checkCSP",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Check Content Security Policy"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 174,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 246,
									"name": "destroyText",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Destroy message text"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 176,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 247,
									"name": "disableActionButton",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Disable action button"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 178,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 248,
									"name": "downloadToEvent",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Enable download to event"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 180,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 249,
									"name": "editorCustomization",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Editor customization options"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 182,
											"character": 2
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 157,
												"name": "TEditorCustomization",
												"package": "@onlyoffice/docspace-sdk-js"
											},
											{
												"type": "intrinsic",
												"name": "object"
											}
										]
									}
								},
								{
									"id": 250,
									"name": "editorGoBack",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Editor back navigation"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 184,
											"character": 2
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 251,
									"name": "editorType",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Editor type"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 186,
											"character": 2
										}
									],
									"type": {
										"type": "reference",
										"target": 151,
										"name": "TEditorType",
										"package": "@onlyoffice/docspace-sdk-js"
									}
								},
								{
									"id": 252,
									"name": "events",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Event handlers"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 188,
											"character": 2
										}
									],
									"type": {
										"type": "reference",
										"target": 192,
										"name": "TFrameEvents",
										"package": "@onlyoffice/docspace-sdk-js"
									}
								},
								{
									"id": 253,
									"name": "filter",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Filter settings"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 190,
											"character": 2
										}
									],
									"type": {
										"type": "reference",
										"target": 183,
										"name": "TFrameFilter",
										"package": "@onlyoffice/docspace-sdk-js"
									}
								},
								{
									"id": 254,
									"name": "filterParam",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Additional filter parameter"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 192,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 255,
									"name": "frameId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Frame identifier"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 194,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 256,
									"name": "height",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Frame height"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 196,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 257,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Optional identifier"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 198,
											"character": 2
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 258,
									"name": "infoPanelVisible",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Show info panel"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 200,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 259,
									"name": "init",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Initialize frame"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 202,
											"character": 2
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 260,
									"name": "locale",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Localization setting"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 204,
											"character": 2
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 261,
									"name": "mode",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Frame operation mode"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 206,
											"character": 2
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 149,
												"name": "TFrameMode",
												"package": "@onlyoffice/docspace-sdk-js"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 262,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Frame name"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 208,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 263,
									"name": "requestToken",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Authentication token"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 210,
											"character": 2
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 264,
									"name": "rootPath",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Root path for resources"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 212,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 265,
									"name": "selectorType",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Selector type"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 214,
											"character": 2
										}
									],
									"type": {
										"type": "reference",
										"target": 150,
										"name": "TSelectorType",
										"package": "@onlyoffice/docspace-sdk-js"
									}
								},
								{
									"id": 266,
									"name": "showFilter",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Show filter UI"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 216,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 267,
									"name": "showHeader",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Show header"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 218,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 268,
									"name": "showHeaderBanner",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Header banner display"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 220,
											"character": 2
										}
									],
									"type": {
										"type": "reference",
										"target": 155,
										"name": "TBannerDisplaying",
										"package": "@onlyoffice/docspace-sdk-js"
									}
								},
								{
									"id": 269,
									"name": "showMenu",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Show menu"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 222,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 270,
									"name": "showSelectorCancel",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Show selector cancel"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 224,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 271,
									"name": "showSelectorHeader",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Show selector header"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 226,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 272,
									"name": "showSettings",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Show settings"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 228,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 273,
									"name": "showSignOut",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Show sign out option"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 230,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 274,
									"name": "showTitle",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Show title"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 232,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 275,
									"name": "src",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Content source URL"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 234,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 276,
									"name": "theme",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "UI theme"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 236,
											"character": 2
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 153,
												"name": "TTheme",
												"package": "@onlyoffice/docspace-sdk-js"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 277,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Editor type"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 238,
											"character": 2
										}
									],
									"type": {
										"type": "reference",
										"target": 151,
										"name": "TEditorType",
										"package": "@onlyoffice/docspace-sdk-js"
									}
								},
								{
									"id": 278,
									"name": "viewAs",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Manager view mode"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 240,
											"character": 2
										}
									],
									"type": {
										"type": "reference",
										"target": 152,
										"name": "TManagerViewMode",
										"package": "@onlyoffice/docspace-sdk-js"
									}
								},
								{
									"id": 279,
									"name": "viewTableColumns",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Table columns to display"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 242,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 280,
									"name": "waiting",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Loading state"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 244,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 281,
									"name": "width",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Frame width"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 246,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 282,
									"name": "withBreadCrumbs",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Show breadcrumbs"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 248,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 283,
									"name": "withSearch",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Enable search"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 250,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 284,
									"name": "withSubtitle",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Show subtitle"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 252,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										244,
										245,
										246,
										247,
										248,
										249,
										250,
										251,
										252,
										253,
										254,
										255,
										256,
										257,
										258,
										259,
										260,
										261,
										262,
										263,
										264,
										265,
										266,
										267,
										268,
										269,
										270,
										271,
										272,
										273,
										274,
										275,
										276,
										277,
										278,
										279,
										280,
										281,
										282,
										283,
										284
									]
								}
							],
							"sources": [
								{
									"fileName": "types/index.ts",
									"line": 170,
									"character": 27
								}
							]
						}
					}
				},
				{
					"id": 192,
					"name": "TFrameEvents",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Frame event handlers"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 140,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 193,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 194,
									"name": "onAppError",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Application error handler"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 142,
											"character": 2
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 195,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 142,
															"character": 23
														}
													],
													"signatures": [
														{
															"id": 196,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"parameters": [
																{
																	"id": 197,
																	"name": "e",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "node_modules/.pnpm/typescript@5.7.2/node_modules/typescript/lib/lib.dom.d.ts",
																					"qualifiedName": "Event"
																				},
																				"name": "Event",
																				"package": "typescript"
																			},
																			{
																				"type": "intrinsic",
																				"name": "object"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 198,
									"name": "onAppReady",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Application ready handler"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 144,
											"character": 2
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 199,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 144,
															"character": 23
														}
													],
													"signatures": [
														{
															"id": 200,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"parameters": [
																{
																	"id": 201,
																	"name": "e",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "node_modules/.pnpm/typescript@5.7.2/node_modules/typescript/lib/lib.dom.d.ts",
																					"qualifiedName": "Event"
																				},
																				"name": "Event",
																				"package": "typescript"
																			},
																			{
																				"type": "intrinsic",
																				"name": "object"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 202,
									"name": "onAuthSuccess",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Authentication success handler"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 146,
											"character": 2
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 203,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 146,
															"character": 26
														}
													],
													"signatures": [
														{
															"id": 204,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"parameters": [
																{
																	"id": 205,
																	"name": "e",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "node_modules/.pnpm/typescript@5.7.2/node_modules/typescript/lib/lib.dom.d.ts",
																					"qualifiedName": "Event"
																				},
																				"name": "Event",
																				"package": "typescript"
																			},
																			{
																				"type": "intrinsic",
																				"name": "object"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 206,
									"name": "onCloseCallback",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Close action handler"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 148,
											"character": 2
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 207,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 148,
															"character": 28
														}
													],
													"signatures": [
														{
															"id": 208,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"parameters": [
																{
																	"id": 209,
																	"name": "e",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "node_modules/.pnpm/typescript@5.7.2/node_modules/typescript/lib/lib.dom.d.ts",
																					"qualifiedName": "Event"
																				},
																				"name": "Event",
																				"package": "typescript"
																			},
																			{
																				"type": "intrinsic",
																				"name": "object"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 210,
									"name": "onContentReady",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Content ready handler"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 150,
											"character": 2
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 211,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 150,
															"character": 27
														}
													],
													"signatures": [
														{
															"id": 212,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"parameters": [
																{
																	"id": 213,
																	"name": "e",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "node_modules/.pnpm/typescript@5.7.2/node_modules/typescript/lib/lib.dom.d.ts",
																					"qualifiedName": "Event"
																				},
																				"name": "Event",
																				"package": "typescript"
																			},
																			{
																				"type": "intrinsic",
																				"name": "object"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 214,
									"name": "onDownload",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Download action handler"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 152,
											"character": 2
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 215,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 152,
															"character": 23
														}
													],
													"signatures": [
														{
															"id": 216,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"parameters": [
																{
																	"id": 217,
																	"name": "e",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "node_modules/.pnpm/typescript@5.7.2/node_modules/typescript/lib/lib.dom.d.ts",
																					"qualifiedName": "Event"
																				},
																				"name": "Event",
																				"package": "typescript"
																			},
																			{
																				"type": "intrinsic",
																				"name": "object"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 218,
									"name": "onEditorCloseCallback",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Editor close handler"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 154,
											"character": 2
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 219,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 154,
															"character": 34
														}
													],
													"signatures": [
														{
															"id": 220,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"parameters": [
																{
																	"id": 221,
																	"name": "e",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "node_modules/.pnpm/typescript@5.7.2/node_modules/typescript/lib/lib.dom.d.ts",
																					"qualifiedName": "Event"
																				},
																				"name": "Event",
																				"package": "typescript"
																			},
																			{
																				"type": "intrinsic",
																				"name": "object"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 238,
									"name": "onEditorOpen",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Editor open handler"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 164,
											"character": 2
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 239,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 164,
															"character": 25
														}
													],
													"signatures": [
														{
															"id": 240,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"parameters": [
																{
																	"id": 241,
																	"name": "e",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "node_modules/.pnpm/typescript@5.7.2/node_modules/typescript/lib/lib.dom.d.ts",
																					"qualifiedName": "Event"
																				},
																				"name": "Event",
																				"package": "typescript"
																			},
																			{
																				"type": "intrinsic",
																				"name": "object"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 222,
									"name": "onNoAccess",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Access denied handler"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 156,
											"character": 2
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 223,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 156,
															"character": 23
														}
													],
													"signatures": [
														{
															"id": 224,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"parameters": [
																{
																	"id": 225,
																	"name": "e",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "node_modules/.pnpm/typescript@5.7.2/node_modules/typescript/lib/lib.dom.d.ts",
																					"qualifiedName": "Event"
																				},
																				"name": "Event",
																				"package": "typescript"
																			},
																			{
																				"type": "intrinsic",
																				"name": "object"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 226,
									"name": "onNotFound",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Resource not found handler"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 158,
											"character": 2
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 227,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 158,
															"character": 23
														}
													],
													"signatures": [
														{
															"id": 228,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"parameters": [
																{
																	"id": 229,
																	"name": "e",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "node_modules/.pnpm/typescript@5.7.2/node_modules/typescript/lib/lib.dom.d.ts",
																					"qualifiedName": "Event"
																				},
																				"name": "Event",
																				"package": "typescript"
																			},
																			{
																				"type": "intrinsic",
																				"name": "object"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 230,
									"name": "onSelectCallback",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Selection handler"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 160,
											"character": 2
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 231,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 160,
															"character": 29
														}
													],
													"signatures": [
														{
															"id": 232,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"parameters": [
																{
																	"id": 233,
																	"name": "e",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "node_modules/.pnpm/typescript@5.7.2/node_modules/typescript/lib/lib.dom.d.ts",
																					"qualifiedName": "Event"
																				},
																				"name": "Event",
																				"package": "typescript"
																			},
																			{
																				"type": "intrinsic",
																				"name": "object"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 234,
									"name": "onSignOut",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Sign-out handler"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 162,
											"character": 2
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 235,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "types/index.ts",
															"line": 162,
															"character": 22
														}
													],
													"signatures": [
														{
															"id": 236,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"parameters": [
																{
																	"id": 237,
																	"name": "e",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "node_modules/.pnpm/typescript@5.7.2/node_modules/typescript/lib/lib.dom.d.ts",
																					"qualifiedName": "Event"
																				},
																				"name": "Event",
																				"package": "typescript"
																			},
																			{
																				"type": "intrinsic",
																				"name": "object"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										194,
										198,
										202,
										206,
										210,
										214,
										218,
										238,
										222,
										226,
										230,
										234
									]
								}
							],
							"sources": [
								{
									"fileName": "types/index.ts",
									"line": 140,
									"character": 27
								}
							]
						}
					}
				},
				{
					"id": 183,
					"name": "TFrameFilter",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Frame filter criteria"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 120,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 184,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 185,
									"name": "count",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Number of items to retrieve"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 122,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 186,
									"name": "folder",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Target folder"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 124,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 187,
									"name": "page",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Page number"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 126,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 188,
									"name": "search",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Search term"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 128,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 189,
									"name": "sortBy",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Sort field"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 130,
											"character": 2
										}
									],
									"type": {
										"type": "reference",
										"target": 156,
										"name": "TFilterSortBy",
										"package": "@onlyoffice/docspace-sdk-js"
									}
								},
								{
									"id": 190,
									"name": "sortOrder",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Sort direction"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 132,
											"character": 2
										}
									],
									"type": {
										"type": "reference",
										"target": 154,
										"name": "TFilterSortOrder",
										"package": "@onlyoffice/docspace-sdk-js"
									}
								},
								{
									"id": 191,
									"name": "withSubfolders",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Include subfolders"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 134,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										185,
										186,
										187,
										188,
										189,
										190,
										191
									]
								}
							],
							"sources": [
								{
									"fileName": "types/index.ts",
									"line": 120,
									"character": 27
								}
							]
						}
					}
				},
				{
					"id": 149,
					"name": "TFrameMode",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Template literal type representing frame mode based on "
							},
							{
								"kind": "code",
								"text": "`SDKMode`"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 41,
							"character": 12
						}
					],
					"type": {
						"type": "templateLiteral",
						"head": "",
						"tail": [
							[
								{
									"type": "reference",
									"target": 304,
									"name": "SDKMode",
									"package": "@onlyoffice/docspace-sdk-js"
								},
								""
							]
						]
					}
				},
				{
					"id": 152,
					"name": "TManagerViewMode",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Template literal type representing manager view mode"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 50,
							"character": 12
						}
					],
					"type": {
						"type": "templateLiteral",
						"head": "",
						"tail": [
							[
								{
									"type": "reference",
									"target": 319,
									"name": "ManagerViewMode",
									"package": "@onlyoffice/docspace-sdk-js"
								},
								""
							]
						]
					}
				},
				{
					"id": 286,
					"name": "TMessageData",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Message data structure"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 261,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 287,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 288,
									"name": "commandData",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Command data payload"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 263,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 289,
									"name": "commandName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Command name"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 265,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 290,
									"name": "eventReturnData",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Event return data"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 267,
											"character": 2
										}
									],
									"type": {
										"type": "reference",
										"target": 294,
										"name": "TEventReturnData",
										"package": "@onlyoffice/docspace-sdk-js"
									}
								},
								{
									"id": 291,
									"name": "frameId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Frame identifier"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 269,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 292,
									"name": "methodReturnData",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Method return data"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 271,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 293,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Message type"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 273,
											"character": 2
										}
									],
									"type": {
										"type": "reference",
										"target": 285,
										"name": "TMessageTypes",
										"package": "@onlyoffice/docspace-sdk-js"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										288,
										289,
										290,
										291,
										292,
										293
									]
								}
							],
							"sources": [
								{
									"fileName": "types/index.ts",
									"line": 261,
									"character": 27
								}
							]
						}
					}
				},
				{
					"id": 285,
					"name": "TMessageTypes",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Template literal type for message types"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 256,
							"character": 12
						}
					],
					"type": {
						"type": "templateLiteral",
						"head": "",
						"tail": [
							[
								{
									"type": "reference",
									"target": 368,
									"name": "MessageTypes",
									"package": "@onlyoffice/docspace-sdk-js"
								},
								""
							]
						]
					}
				},
				{
					"id": 150,
					"name": "TSelectorType",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Template literal type for selector filters"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 44,
							"character": 12
						}
					],
					"type": {
						"type": "templateLiteral",
						"head": "",
						"tail": [
							[
								{
									"type": "reference",
									"target": 311,
									"name": "SelectorFilterType",
									"package": "@onlyoffice/docspace-sdk-js"
								},
								""
							]
						]
					}
				},
				{
					"id": 298,
					"name": "TTask",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Task object structure"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 289,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 299,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 300,
									"name": "data",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Task data payload"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 291,
											"character": 2
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "object"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 301,
									"name": "methodName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Method name"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 293,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 302,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Task type"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/index.ts",
											"line": 295,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										300,
										301,
										302
									]
								}
							],
							"sources": [
								{
									"fileName": "types/index.ts",
									"line": 289,
									"character": 20
								}
							]
						}
					}
				},
				{
					"id": 153,
					"name": "TTheme",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Template literal type representing theme options"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/index.ts",
							"line": 53,
							"character": 12
						}
					],
					"type": {
						"type": "templateLiteral",
						"head": "",
						"tail": [
							[
								{
									"type": "reference",
									"target": 323,
									"name": "Theme",
									"package": "@onlyoffice/docspace-sdk-js"
								},
								""
							]
						]
					}
				}
			],
			"groups": [
				{
					"title": "Type Aliases",
					"children": [
						155,
						157,
						151,
						294,
						156,
						154,
						242,
						192,
						183,
						149,
						152,
						286,
						285,
						150,
						298,
						153
					]
				}
			],
			"sources": [
				{
					"fileName": "types/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1,
			"name": "SDK",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The SDK class is responsible for managing multiple SDKInstance objects.\r\nIt provides a method to initialize instances with a given configuration."
					}
				],
				"blockTags": [
					{
						"tag": "@remarks",
						"content": [
							{
								"kind": "text",
								"text": "- If an instance with the same frameId already exists, it reinitializes that instance.\r\n- Otherwise, it creates a new instance, initializes it, and adds it to the instances list."
							}
						]
					},
					{
						"tag": "@example",
						"content": [
							{
								"kind": "code",
								"text": "```typescript\r\nconst sdk = new SDK();\r\nconst config = { frameId: 'frame1', ...otherConfig };\r\nconst instance = sdk.init(config);\r\n```"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 2,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 3,
							"name": "SDK",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1,
								"name": "SDK",
								"package": "@onlyoffice/docspace-sdk-js"
							}
						}
					]
				},
				{
					"id": 5,
					"name": "frames",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "sdk/index.ts",
							"line": 39,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/.pnpm/typescript@5.7.2/node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 30,
								"name": "SDKInstance",
								"package": "@onlyoffice/docspace-sdk-js"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"defaultValue": "{}"
				},
				{
					"id": 4,
					"name": "instances",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "sdk/index.ts",
							"line": 38,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 30,
							"name": "SDKInstance",
							"package": "@onlyoffice/docspace-sdk-js"
						}
					},
					"defaultValue": "[]"
				},
				{
					"id": 6,
					"name": "init",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "sdk/index.ts",
							"line": 49,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 7,
							"name": "init",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Initializes an SDK instance with the provided configuration.\r\nIf an instance with the same frameId already exists, it reinitializes that instance.\r\nOtherwise, it creates a new instance, initializes it, and adds it to the instances list."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The initialized SDK instance."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "sdk/index.ts",
									"line": 49,
									"character": 9
								}
							],
							"parameters": [
								{
									"id": 8,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configuration object for the SDK instance."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 242,
										"name": "TFrameConfig",
										"package": "@onlyoffice/docspace-sdk-js"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 30,
								"name": "SDKInstance",
								"package": "@onlyoffice/docspace-sdk-js"
							}
						}
					]
				},
				{
					"id": 18,
					"name": "initEditor",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "sdk/index.ts",
							"line": 100,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 19,
							"name": "initEditor",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Initializes the editor with the given configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The initialized SDK instance."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "sdk/index.ts",
									"line": 100,
									"character": 15
								}
							],
							"parameters": [
								{
									"id": 20,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configuration object for the editor."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 242,
										"name": "TFrameConfig",
										"package": "@onlyoffice/docspace-sdk-js"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 30,
								"name": "SDKInstance",
								"package": "@onlyoffice/docspace-sdk-js"
							}
						}
					]
				},
				{
					"id": 24,
					"name": "initFileSelector",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "sdk/index.ts",
							"line": 118,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 25,
							"name": "initFileSelector",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Initializes the file selector with the given configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The initialized SDK instance."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "sdk/index.ts",
									"line": 118,
									"character": 21
								}
							],
							"parameters": [
								{
									"id": 26,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configuration object for the file selector."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 242,
										"name": "TFrameConfig",
										"package": "@onlyoffice/docspace-sdk-js"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 30,
								"name": "SDKInstance",
								"package": "@onlyoffice/docspace-sdk-js"
							}
						}
					]
				},
				{
					"id": 9,
					"name": "initFrame",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "sdk/index.ts",
							"line": 74,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 10,
							"name": "initFrame",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Initializes the frame with the given configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The initialized SDK instance."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "sdk/index.ts",
									"line": 74,
									"character": 14
								}
							],
							"parameters": [
								{
									"id": 11,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configuration object for the frame."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 242,
										"name": "TFrameConfig",
										"package": "@onlyoffice/docspace-sdk-js"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 30,
								"name": "SDKInstance",
								"package": "@onlyoffice/docspace-sdk-js"
							}
						}
					]
				},
				{
					"id": 12,
					"name": "initManager",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "sdk/index.ts",
							"line": 82,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 13,
							"name": "initManager",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Initializes the manager with the provided configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The initialized SDK instance."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "sdk/index.ts",
									"line": 82,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 14,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configuration object for initializing the manager."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 242,
										"name": "TFrameConfig",
										"package": "@onlyoffice/docspace-sdk-js"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 30,
								"name": "SDKInstance",
								"package": "@onlyoffice/docspace-sdk-js"
							}
						}
					]
				},
				{
					"id": 21,
					"name": "initRoomSelector",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "sdk/index.ts",
							"line": 109,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 22,
							"name": "initRoomSelector",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Initializes the Room Selector with the provided configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The initialized SDK instance."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "sdk/index.ts",
									"line": 109,
									"character": 21
								}
							],
							"parameters": [
								{
									"id": 23,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configuration object for initializing the Room Selector."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 242,
										"name": "TFrameConfig",
										"package": "@onlyoffice/docspace-sdk-js"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 30,
								"name": "SDKInstance",
								"package": "@onlyoffice/docspace-sdk-js"
							}
						}
					]
				},
				{
					"id": 27,
					"name": "initSystem",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "sdk/index.ts",
							"line": 127,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 28,
							"name": "initSystem",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Initializes the system with the provided configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The initialized SDK instance."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "sdk/index.ts",
									"line": 127,
									"character": 15
								}
							],
							"parameters": [
								{
									"id": 29,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configuration object for initializing the system."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 242,
										"name": "TFrameConfig",
										"package": "@onlyoffice/docspace-sdk-js"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 30,
								"name": "SDKInstance",
								"package": "@onlyoffice/docspace-sdk-js"
							}
						}
					]
				},
				{
					"id": 15,
					"name": "initViewer",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "sdk/index.ts",
							"line": 91,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 16,
							"name": "initViewer",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Initializes the viewer with the provided configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The initialized SDK instance."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "sdk/index.ts",
									"line": 91,
									"character": 15
								}
							],
							"parameters": [
								{
									"id": 17,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configuration object for the viewer."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 242,
										"name": "TFrameConfig",
										"package": "@onlyoffice/docspace-sdk-js"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 30,
								"name": "SDKInstance",
								"package": "@onlyoffice/docspace-sdk-js"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2
					]
				},
				{
					"title": "Properties",
					"children": [
						5,
						4
					]
				},
				{
					"title": "Methods",
					"children": [
						6,
						18,
						24,
						9,
						12,
						21,
						27,
						15
					]
				}
			],
			"sources": [
				{
					"fileName": "sdk/index.ts",
					"line": 37,
					"character": 13
				}
			]
		},
		{
			"id": 30,
			"name": "SDKInstance",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents an SDK instance for managing frames and communication with DocSpace.\r\n\r\nThe SDKInstance class provides methods for initializing, managing, and communicating with\r\nDocSpace frames. It handles frame creation, message passing, and various operations like\r\nfile management, user authentication, and room management."
					}
				],
				"blockTags": [
					{
						"tag": "@remarks",
						"content": [
							{
								"kind": "text",
								"text": "The class implements a message-based communication system between the parent window\r\nand the DocSpace frame."
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 31,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "instance/index.ts",
							"line": 52,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 32,
							"name": "SDKInstance",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "instance/index.ts",
									"line": 52,
									"character": 2
								}
							],
							"parameters": [
								{
									"id": 33,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 242,
										"name": "TFrameConfig",
										"package": "@onlyoffice/docspace-sdk-js"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 30,
								"name": "SDKInstance",
								"package": "@onlyoffice/docspace-sdk-js"
							}
						}
					]
				},
				{
					"id": 42,
					"name": "config",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "instance/index.ts",
							"line": 50,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 242,
						"name": "TFrameConfig",
						"package": "@onlyoffice/docspace-sdk-js"
					}
				},
				{
					"id": 138,
					"name": "addTagsToRoom",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "instance/index.ts",
							"line": 705,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 139,
							"name": "addTagsToRoom",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds tags to a specified room."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A promise that resolves to an object containing the result of the operation."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "instance/index.ts",
									"line": 705,
									"character": 2
								}
							],
							"parameters": [
								{
									"id": 140,
									"name": "roomId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The unique identifier of the room to which tags will be added."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 141,
									"name": "tags",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of tags to be added to the room."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.7.2/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "object"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 100,
					"name": "createFile",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "instance/index.ts",
							"line": 569,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 101,
							"name": "createFile",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a new file in the specified folder."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A promise that resolves to an object representing the created file."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "instance/index.ts",
									"line": 569,
									"character": 2
								}
							],
							"parameters": [
								{
									"id": 102,
									"name": "folderId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the folder where the file will be created."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 103,
									"name": "title",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The title of the new file."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 104,
									"name": "templateId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the template to be used for the new file."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 105,
									"name": "formId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the form associated with the new file."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.7.2/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "object"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 106,
					"name": "createFolder",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "instance/index.ts",
							"line": 590,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 107,
							"name": "createFolder",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a new folder within the specified parent folder."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A promise that resolves to an object containing the details of the created folder."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "instance/index.ts",
									"line": 590,
									"character": 2
								}
							],
							"parameters": [
								{
									"id": 108,
									"name": "parentFolderId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the parent folder where the new folder will be created."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 109,
									"name": "title",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The title of the new folder."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.7.2/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "object"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 123,
					"name": "createHash",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "instance/index.ts",
							"line": 649,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 124,
							"name": "createHash",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a hash for the given password using the specified hash settings."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A promise that resolves to an object containing the hash."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "instance/index.ts",
									"line": 649,
									"character": 2
								}
							],
							"parameters": [
								{
									"id": 125,
									"name": "password",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The password to be hashed."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 126,
									"name": "hashSettings",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object containing settings for the hash function."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.7.2/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "object"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 110,
					"name": "createRoom",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "instance/index.ts",
							"line": 610,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 111,
							"name": "createRoom",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a new room with the specified parameters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A promise that resolves to an object representing the created room."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "instance/index.ts",
									"line": 610,
									"character": 2
								}
							],
							"parameters": [
								{
									"id": 112,
									"name": "title",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The title of the room."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 113,
									"name": "roomType",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The type of the room."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 114,
									"name": "quota",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "(Optional) The quota for the room."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 115,
									"name": "tags",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "(Optional) An array of tags associated with the room."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 116,
									"name": "color",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "(Optional) The main color of the room logo."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 117,
									"name": "cover",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "(Optional) The cover image of the room."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 118,
									"name": "indexing",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "(Optional) Whether the room should be indexed (VDR only)."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 119,
									"name": "denyDownload",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "(Optional) Whether downloading is denied in the room (VDR only)."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.7.2/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "object"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 135,
					"name": "createTag",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "instance/index.ts",
							"line": 694,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 136,
							"name": "createTag",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a new tag with the specified name."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A promise that resolves to an object representing the created tag."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "instance/index.ts",
									"line": 694,
									"character": 2
								}
							],
							"parameters": [
								{
									"id": 137,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the tag to be created."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.7.2/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "object"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 68,
					"name": "destroyFrame",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "instance/index.ts",
							"line": 421,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 69,
							"name": "destroyFrame",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Destroys the current frame by replacing it with a new div element.\r\n\r\nThis method performs the following actions:\r\n1. Creates a new div element and sets its id, innerHTML, and className based on the current configuration.\r\n2. Retrieves the target frame element using the configured frameId.\r\n3. Removes the 'message' event listener from the window.\r\n4. Sets the internal connection status to false.\r\n5. Replaces the target frame element with the newly created div element."
									}
								],
								"blockTags": [
									{
										"tag": "@remarks",
										"content": [
											{
												"kind": "text",
												"text": "The method assumes that the frameId and destroyText are defined in the configuration object.\r\nThe method also assumes that the class names are stored in a private property "
											},
											{
												"kind": "code",
												"text": "`#classNames`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "If the frameId is not defined in the configuration."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "instance/index.ts",
									"line": 421,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 77,
					"name": "getConfig",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "instance/index.ts",
							"line": 473,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 78,
							"name": "getConfig",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Retrieves the current configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The current configuration object."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "instance/index.ts",
									"line": 473,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 242,
								"name": "TFrameConfig",
								"package": "@onlyoffice/docspace-sdk-js"
							}
						}
					]
				},
				{
					"id": 146,
					"name": "getEditorInstance",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "instance/index.ts",
							"line": 731,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 147,
							"name": "getEditorInstance",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Retrieves object with the editor instance and Asc object helper."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A promise that resolves to object with the editor instance and Asc object helper."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "instance/index.ts",
									"line": 731,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.7.2/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "object"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 83,
					"name": "getFiles",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "instance/index.ts",
							"line": 500,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 84,
							"name": "getFiles",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Retrieves a list of files."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A promise that resolves to an object containing the files."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "instance/index.ts",
									"line": 500,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.7.2/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "object"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 79,
					"name": "getFolderInfo",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "instance/index.ts",
							"line": 482,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 80,
							"name": "getFolderInfo",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Retrieves information about a folder."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A promise that resolves to an object containing folder information."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "instance/index.ts",
									"line": 482,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.7.2/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "object"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 85,
					"name": "getFolders",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "instance/index.ts",
							"line": 509,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 86,
							"name": "getFolders",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Retrieves a list of folders."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A promise that resolves to an object containing folder information."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "instance/index.ts",
									"line": 509,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.7.2/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "object"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 94,
					"name": "getHashSettings",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "instance/index.ts",
							"line": 545,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 95,
							"name": "getHashSettings",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Retrieves the hash settings."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A promise that resolves to an object containing the hash settings."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "instance/index.ts",
									"line": 545,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.7.2/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "object"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 87,
					"name": "getList",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "instance/index.ts",
							"line": 517,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 88,
							"name": "getList",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Retrieves a list of files and folders."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A promise that resolves to an object containing the list of files and folders."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "instance/index.ts",
									"line": 517,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.7.2/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "object"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 89,
					"name": "getRooms",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "instance/index.ts",
							"line": 527,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 90,
							"name": "getRooms",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Retrieves a list of rooms based on the provided filter."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A promise that resolves to an object containing the filtered rooms."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "instance/index.ts",
									"line": 527,
									"character": 2
								}
							],
							"parameters": [
								{
									"id": 91,
									"name": "filter",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The criteria used to filter the rooms."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 183,
										"name": "TFrameFilter",
										"package": "@onlyoffice/docspace-sdk-js"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.7.2/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "object"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 81,
					"name": "getSelection",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "instance/index.ts",
							"line": 491,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 82,
							"name": "getSelection",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Retrieves the current selection."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A promise that resolves to the current selection object."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "instance/index.ts",
									"line": 491,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.7.2/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "object"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 92,
					"name": "getUserInfo",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "instance/index.ts",
							"line": 536,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 93,
							"name": "getUserInfo",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Retrieves user information."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A promise that resolves to an object containing user information."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "instance/index.ts",
									"line": 536,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.7.2/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "object"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 65,
					"name": "initFrame",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "instance/index.ts",
							"line": 344,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 66,
							"name": "initFrame",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Initializes an iframe with the given configuration and appends it to the target element."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created iframe element."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "instance/index.ts",
									"line": 344,
									"character": 2
								}
							],
							"parameters": [
								{
									"id": 67,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configuration object for the iframe."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 242,
										"name": "TFrameConfig",
										"package": "@onlyoffice/docspace-sdk-js"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.7.2/node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLIFrameElement"
								},
								"name": "HTMLIFrameElement",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 127,
					"name": "login",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "instance/index.ts",
							"line": 665,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 128,
							"name": "login",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Logs in a user with the provided credentials."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A promise that resolves to an object containing the login result."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "instance/index.ts",
									"line": 665,
									"character": 2
								}
							],
							"parameters": [
								{
									"id": 129,
									"name": "email",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The email address of the user."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 130,
									"name": "passwordHash",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The hashed password of the user."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 131,
									"name": "password",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "(Optional) The plaintext password of the user."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 132,
									"name": "session",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "(Optional) A boolean indicating whether to create a session."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.7.2/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "object"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 133,
					"name": "logout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "instance/index.ts",
							"line": 684,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 134,
							"name": "logout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Logs out the current user by invoking the \"logout\" method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A promise that resolves to an object upon successful logout."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "instance/index.ts",
									"line": 684,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.7.2/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "object"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 96,
					"name": "openModal",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "instance/index.ts",
							"line": 556,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 97,
							"name": "openModal",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Opens a modal of the specified type with the given options."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A promise that resolves to an object containing the result of the modal operation."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "instance/index.ts",
									"line": 556,
									"character": 2
								}
							],
							"parameters": [
								{
									"id": 98,
									"name": "type",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The type of modal to open."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 99,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object containing options for the modal."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.7.2/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "object"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 142,
					"name": "removeTagsFromRoom",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "instance/index.ts",
							"line": 719,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 143,
							"name": "removeTagsFromRoom",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Removes specified tags from a room."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A promise that resolves to an object containing the result of the operation."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "instance/index.ts",
									"line": 719,
									"character": 2
								}
							],
							"parameters": [
								{
									"id": 144,
									"name": "roomId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The unique identifier of the room."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 145,
									"name": "tags",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of tags to be removed from the room."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.7.2/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "object"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 74,
					"name": "setConfig",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "instance/index.ts",
							"line": 462,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 75,
							"name": "setConfig",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets the configuration for the instance."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A promise that resolves to an object."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "instance/index.ts",
									"line": 462,
									"character": 2
								}
							],
							"parameters": [
								{
									"id": 76,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configuration object to be set. Defaults to "
											},
											{
												"kind": "code",
												"text": "`defaultConfig`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 242,
										"name": "TFrameConfig",
										"package": "@onlyoffice/docspace-sdk-js"
									},
									"defaultValue": "defaultConfig"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.7.2/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "object"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 63,
					"name": "setIsLoaded",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "instance/index.ts",
							"line": 320,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 64,
							"name": "setIsLoaded",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets the target frame as loaded by updating its styles and removing the loader element.\r\nIf the loader element is found and removed, it triggers the "
									},
									{
										"kind": "code",
										"text": "`onContentReady`"
									},
									{
										"kind": "text",
										"text": " event if it exists."
									}
								],
								"blockTags": [
									{
										"tag": "@remarks",
										"content": [
											{
												"kind": "text",
												"text": "This method modifies the styles of the target frame to make it visible and adjusts its dimensions\r\nbased on the configuration. It also ensures the parent node's height is set to inherit."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "instance/index.ts",
									"line": 320,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 120,
					"name": "setListView",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "instance/index.ts",
							"line": 638,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 121,
							"name": "setListView",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets the list view type for the instance."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A promise that resolves to an object indicating the result of the operation."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "instance/index.ts",
									"line": 638,
									"character": 2
								}
							],
							"parameters": [
								{
									"id": 122,
									"name": "viewType",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The type of view to set. This could be a string representing different view types (e.g., \"grid\", \"list\")."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.7.2/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "object"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						31
					]
				},
				{
					"title": "Properties",
					"children": [
						42
					]
				},
				{
					"title": "Methods",
					"children": [
						138,
						100,
						106,
						123,
						110,
						135,
						68,
						77,
						146,
						83,
						79,
						85,
						94,
						87,
						89,
						81,
						92,
						65,
						127,
						133,
						96,
						142,
						74,
						63,
						120
					]
				}
			],
			"sources": [
				{
					"fileName": "instance/index.ts",
					"line": 44,
					"character": 13
				}
			]
		}
	],
	"groups": [
		{
			"title": "Namespaces",
			"children": [
				303,
				148
			]
		},
		{
			"title": "Classes",
			"children": [
				1,
				30
			]
		}
	],
	"packageName": "@onlyoffice/docspace-sdk-js",
	"readme": [
		{
			"kind": "text",
			"text": "# ONLYOFFICE DocSpace JavaScript SDK\n\n## Basic concepts\n\nThe ONLYOFFICE DocSpace SDK based on JavaScript allows developers to use all the DocSpace possibilities with *api.js*. You can integrate ONLYOFFICE DocSpace into your own web application, allowing users to create and submit documents directly from your website. For example, you can use the ONLYOFFICE DocSpace [React component](https://api.onlyoffice.com/docspace/javascript-sdk/get-started/react-component/) to integrate ONLYOFFICE DocSpace into React projects.\n\nYou don't need to be an experienced JavaScript developer to use the DocSpace JavaScript SDK because we provide you with all the basics. You only need a few lines of JavaScript to set up a fully functional integration.\n\nFollow the steps below to connect DocSpace as a frame to your website.\n\n## Step 1. Specifying the DocSpace URL\n\nFor the JavaScript SDK to work correctly, it must be launched on the server. Note that running the HTML file directly will not work. Please make sure you are using a server environment.\n\nYou need to add the URL of your server's root directory to the **Developer Tools** section of DocSpace:\n\n1. Go to the DocSpace settings.\n2. Navigate to the **Developer Tools** section.\n3. On the **JavaScript SDK** tab, in the **Enter the address of DocSpace to embed** field, add the URL of your server's root directory.\n\n## Step 2. Creating the HTML file\n\nCreate the target HTML file which must include a placeholder *div* tag, where all the information about DocSpace parameters will be passed:\n\n"
		},
		{
			"kind": "code",
			"text": "``` html\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\">\n        <title>DocSpace JavaScript SDK</title>\n        <script src=\"{PORTAL_SRC}/static/scripts/sdk/1.0.0/api.js\"></script>\n    </head>\n    <body>\n        <div id=\"ds-frame\"></div>\n    </body>\n</html>\n```"
		},
		{
			"kind": "text",
			"text": "\n\nThe API JavaScript file can normally be found in the following DocSpace folder:\n\n"
		},
		{
			"kind": "code",
			"text": "`{PORTAL\\_SRC}/static/scripts/sdk/1.0.0/api.js`"
		},
		{
			"kind": "text",
			"text": "\n\nwhere **"
		},
		{
			"kind": "text",
			"text": "{PORTAL\\_SRC"
		},
		{
			"kind": "text",
			"text": "}"
		},
		{
			"kind": "text",
			"text": "** is the name of the server with the ONLYOFFICE DocSpace installed.\n\n## Step 3. Getting the base class\n\nWhen the API JavaScript is connected to the page, get the base class that provides all the basic functionality of *api.js*:\n\n| Class        | Description                                                                                                                               |\n| ------------ | ----------------------------------------------------------------------------------------------------------------------------------------- |\n| DocSpace.SDK | Defines the DocSpace document manager and allows you to perform operations with rooms, folders, and documents within the DocSpace portal. |\n\n## Step 4. Authorizing\n\n*api.js* uses the active DocSpace application sessions to authenticate users. If the user is logged in to the DocSpace portal that the SDK will connect to, then *api.js* recognizes and uses that active session.\n\nIf the users are not authenticated, they will see a page asking them to sign in to DocSpace the first time they use it. Authentication is also possible through the SDK [methods](https://api.onlyoffice.com/docspace/javascript-sdk/usage-sdk/methods/#login).\n\n## Step 5. Initializing\n\n> Please note that when working via HTTPS, it is necessary to set the **\"SameSite\": \"none\"** parameter in *appsettings.json* to avoid blocking the work with cookies during cross-domain requests.\n\nInitialize DocSpace frame using the [initFrame](https://api.onlyoffice.com/docspace/javascript-sdk/usage-sdk/methods/#initframe) method with the SDK config passed to it:\n\n"
		},
		{
			"kind": "code",
			"text": "``` ts\nconst docSpace = DocSpace.SDK.initFrame({\n  frameId: \"frameId\",\n  showMenu: true,\n})\n```"
		},
		{
			"kind": "text",
			"text": "\n\nYou can use other available [methods](https://api.onlyoffice.com/docspace/javascript-sdk/usage-sdk/methods/) to initialize DocSpace.\n\nThe full list of [config parameters](https://api.onlyoffice.com/docspace/javascript-sdk/usage-sdk/config/) can be found here.\n\n## Step 6. Using\n\nAfter initialization, the current SDK instance can be accessed by using its [frameId](https://api.onlyoffice.com/docspace/javascript-sdk/usage-sdk/config/#frameid). The list of current SDK instances is available in the *DocSpace.SDK.frames* array. To get the specific SDK instance, use the following string:\n\n"
		},
		{
			"kind": "code",
			"text": "``` ts\nDocSpace.SDK.frames[frameId]\n```"
		}
	],
	"symbolIdMap": {
		"0": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": ""
		},
		"1": {
			"sourceFileName": "src/sdk/index.ts",
			"qualifiedName": "SDK"
		},
		"4": {
			"sourceFileName": "src/sdk/index.ts",
			"qualifiedName": "SDK.instances"
		},
		"5": {
			"sourceFileName": "src/sdk/index.ts",
			"qualifiedName": "SDK.frames"
		},
		"6": {
			"sourceFileName": "src/sdk/index.ts",
			"qualifiedName": "SDK.init"
		},
		"7": {
			"sourceFileName": "src/sdk/index.ts",
			"qualifiedName": "SDK.init"
		},
		"8": {
			"sourceFileName": "src/sdk/index.ts",
			"qualifiedName": "config"
		},
		"9": {
			"sourceFileName": "src/sdk/index.ts",
			"qualifiedName": "SDK.initFrame"
		},
		"10": {
			"sourceFileName": "src/sdk/index.ts",
			"qualifiedName": "SDK.initFrame"
		},
		"11": {
			"sourceFileName": "src/sdk/index.ts",
			"qualifiedName": "config"
		},
		"12": {
			"sourceFileName": "src/sdk/index.ts",
			"qualifiedName": "SDK.initManager"
		},
		"13": {
			"sourceFileName": "src/sdk/index.ts",
			"qualifiedName": "SDK.initManager"
		},
		"14": {
			"sourceFileName": "src/sdk/index.ts",
			"qualifiedName": "config"
		},
		"15": {
			"sourceFileName": "src/sdk/index.ts",
			"qualifiedName": "SDK.initViewer"
		},
		"16": {
			"sourceFileName": "src/sdk/index.ts",
			"qualifiedName": "SDK.initViewer"
		},
		"17": {
			"sourceFileName": "src/sdk/index.ts",
			"qualifiedName": "config"
		},
		"18": {
			"sourceFileName": "src/sdk/index.ts",
			"qualifiedName": "SDK.initEditor"
		},
		"19": {
			"sourceFileName": "src/sdk/index.ts",
			"qualifiedName": "SDK.initEditor"
		},
		"20": {
			"sourceFileName": "src/sdk/index.ts",
			"qualifiedName": "config"
		},
		"21": {
			"sourceFileName": "src/sdk/index.ts",
			"qualifiedName": "SDK.initRoomSelector"
		},
		"22": {
			"sourceFileName": "src/sdk/index.ts",
			"qualifiedName": "SDK.initRoomSelector"
		},
		"23": {
			"sourceFileName": "src/sdk/index.ts",
			"qualifiedName": "config"
		},
		"24": {
			"sourceFileName": "src/sdk/index.ts",
			"qualifiedName": "SDK.initFileSelector"
		},
		"25": {
			"sourceFileName": "src/sdk/index.ts",
			"qualifiedName": "SDK.initFileSelector"
		},
		"26": {
			"sourceFileName": "src/sdk/index.ts",
			"qualifiedName": "config"
		},
		"27": {
			"sourceFileName": "src/sdk/index.ts",
			"qualifiedName": "SDK.initSystem"
		},
		"28": {
			"sourceFileName": "src/sdk/index.ts",
			"qualifiedName": "SDK.initSystem"
		},
		"29": {
			"sourceFileName": "src/sdk/index.ts",
			"qualifiedName": "config"
		},
		"30": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "SDKInstance"
		},
		"31": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "SDKInstance.__constructor"
		},
		"32": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "SDKInstance"
		},
		"33": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "config"
		},
		"42": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "SDKInstance.config"
		},
		"63": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "SDKInstance.setIsLoaded"
		},
		"64": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "SDKInstance.setIsLoaded"
		},
		"65": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "SDKInstance.initFrame"
		},
		"66": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "SDKInstance.initFrame"
		},
		"67": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "config"
		},
		"68": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "SDKInstance.destroyFrame"
		},
		"69": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "SDKInstance.destroyFrame"
		},
		"74": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "SDKInstance.setConfig"
		},
		"75": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "SDKInstance.setConfig"
		},
		"76": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "config"
		},
		"77": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "SDKInstance.getConfig"
		},
		"78": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "SDKInstance.getConfig"
		},
		"79": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "SDKInstance.getFolderInfo"
		},
		"80": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "SDKInstance.getFolderInfo"
		},
		"81": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "SDKInstance.getSelection"
		},
		"82": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "SDKInstance.getSelection"
		},
		"83": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "SDKInstance.getFiles"
		},
		"84": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "SDKInstance.getFiles"
		},
		"85": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "SDKInstance.getFolders"
		},
		"86": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "SDKInstance.getFolders"
		},
		"87": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "SDKInstance.getList"
		},
		"88": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "SDKInstance.getList"
		},
		"89": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "SDKInstance.getRooms"
		},
		"90": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "SDKInstance.getRooms"
		},
		"91": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "filter"
		},
		"92": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "SDKInstance.getUserInfo"
		},
		"93": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "SDKInstance.getUserInfo"
		},
		"94": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "SDKInstance.getHashSettings"
		},
		"95": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "SDKInstance.getHashSettings"
		},
		"96": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "SDKInstance.openModal"
		},
		"97": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "SDKInstance.openModal"
		},
		"98": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "type"
		},
		"99": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "options"
		},
		"100": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "SDKInstance.createFile"
		},
		"101": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "SDKInstance.createFile"
		},
		"102": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "folderId"
		},
		"103": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "title"
		},
		"104": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "templateId"
		},
		"105": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "formId"
		},
		"106": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "SDKInstance.createFolder"
		},
		"107": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "SDKInstance.createFolder"
		},
		"108": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "parentFolderId"
		},
		"109": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "title"
		},
		"110": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "SDKInstance.createRoom"
		},
		"111": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "SDKInstance.createRoom"
		},
		"112": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "title"
		},
		"113": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "roomType"
		},
		"114": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "quota"
		},
		"115": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "tags"
		},
		"116": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "color"
		},
		"117": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "cover"
		},
		"118": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "indexing"
		},
		"119": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "denyDownload"
		},
		"120": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "SDKInstance.setListView"
		},
		"121": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "SDKInstance.setListView"
		},
		"122": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "viewType"
		},
		"123": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "SDKInstance.createHash"
		},
		"124": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "SDKInstance.createHash"
		},
		"125": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "password"
		},
		"126": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "hashSettings"
		},
		"127": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "SDKInstance.login"
		},
		"128": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "SDKInstance.login"
		},
		"129": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "email"
		},
		"130": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "passwordHash"
		},
		"131": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "password"
		},
		"132": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "session"
		},
		"133": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "SDKInstance.logout"
		},
		"134": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "SDKInstance.logout"
		},
		"135": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "SDKInstance.createTag"
		},
		"136": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "SDKInstance.createTag"
		},
		"137": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "name"
		},
		"138": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "SDKInstance.addTagsToRoom"
		},
		"139": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "SDKInstance.addTagsToRoom"
		},
		"140": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "roomId"
		},
		"141": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "tags"
		},
		"142": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "SDKInstance.removeTagsFromRoom"
		},
		"143": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "SDKInstance.removeTagsFromRoom"
		},
		"144": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "roomId"
		},
		"145": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "tags"
		},
		"146": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "SDKInstance.getEditorInstance"
		},
		"147": {
			"sourceFileName": "src/instance/index.ts",
			"qualifiedName": "SDKInstance.getEditorInstance"
		},
		"148": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": ""
		},
		"149": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "TFrameMode"
		},
		"150": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "TSelectorType"
		},
		"151": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "TEditorType"
		},
		"152": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "TManagerViewMode"
		},
		"153": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "TTheme"
		},
		"154": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "TFilterSortOrder"
		},
		"155": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "TBannerDisplaying"
		},
		"156": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "TFilterSortBy"
		},
		"157": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "TEditorCustomization"
		},
		"158": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type"
		},
		"159": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.anonymous"
		},
		"160": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type"
		},
		"161": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.request"
		},
		"162": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.label"
		},
		"163": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.autosave"
		},
		"164": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.comments"
		},
		"165": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.compactHeader"
		},
		"166": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.compactToolbar"
		},
		"167": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.compatibleFeatures"
		},
		"168": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.forcesave"
		},
		"169": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.help"
		},
		"170": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.hideRightMenu"
		},
		"171": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.hideRulers"
		},
		"172": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.integrationMode"
		},
		"173": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.macros"
		},
		"174": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.macrosMode"
		},
		"175": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.mentionShare"
		},
		"176": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.mobileForceView"
		},
		"177": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.plugins"
		},
		"178": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.toolbarHideFileName"
		},
		"179": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.toolbarNoTabs"
		},
		"180": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.uiTheme"
		},
		"181": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.unit"
		},
		"182": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.zoom"
		},
		"183": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "TFrameFilter"
		},
		"184": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type"
		},
		"185": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.count"
		},
		"186": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.folder"
		},
		"187": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.page"
		},
		"188": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.search"
		},
		"189": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.sortBy"
		},
		"190": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.sortOrder"
		},
		"191": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.withSubfolders"
		},
		"192": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "TFrameEvents"
		},
		"193": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type"
		},
		"194": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.onAppError"
		},
		"195": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type"
		},
		"196": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type"
		},
		"197": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "e"
		},
		"198": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.onAppReady"
		},
		"199": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type"
		},
		"200": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type"
		},
		"201": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "e"
		},
		"202": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.onAuthSuccess"
		},
		"203": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type"
		},
		"204": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type"
		},
		"205": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "e"
		},
		"206": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.onCloseCallback"
		},
		"207": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type"
		},
		"208": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type"
		},
		"209": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "e"
		},
		"210": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.onContentReady"
		},
		"211": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type"
		},
		"212": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type"
		},
		"213": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "e"
		},
		"214": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.onDownload"
		},
		"215": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type"
		},
		"216": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type"
		},
		"217": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "e"
		},
		"218": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.onEditorCloseCallback"
		},
		"219": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type"
		},
		"220": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type"
		},
		"221": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "e"
		},
		"222": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.onNoAccess"
		},
		"223": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type"
		},
		"224": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type"
		},
		"225": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "e"
		},
		"226": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.onNotFound"
		},
		"227": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type"
		},
		"228": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type"
		},
		"229": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "e"
		},
		"230": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.onSelectCallback"
		},
		"231": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type"
		},
		"232": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type"
		},
		"233": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "e"
		},
		"234": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.onSignOut"
		},
		"235": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type"
		},
		"236": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type"
		},
		"237": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "e"
		},
		"238": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.onEditorOpen"
		},
		"239": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type"
		},
		"240": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type"
		},
		"241": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "e"
		},
		"242": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "TFrameConfig"
		},
		"243": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type"
		},
		"244": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.buttonColor"
		},
		"245": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.checkCSP"
		},
		"246": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.destroyText"
		},
		"247": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.disableActionButton"
		},
		"248": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.downloadToEvent"
		},
		"249": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.editorCustomization"
		},
		"250": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.editorGoBack"
		},
		"251": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.editorType"
		},
		"252": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.events"
		},
		"253": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.filter"
		},
		"254": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.filterParam"
		},
		"255": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.frameId"
		},
		"256": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.height"
		},
		"257": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.id"
		},
		"258": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.infoPanelVisible"
		},
		"259": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.init"
		},
		"260": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.locale"
		},
		"261": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.mode"
		},
		"262": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.name"
		},
		"263": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.requestToken"
		},
		"264": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.rootPath"
		},
		"265": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.selectorType"
		},
		"266": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.showFilter"
		},
		"267": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.showHeader"
		},
		"268": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.showHeaderBanner"
		},
		"269": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.showMenu"
		},
		"270": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.showSelectorCancel"
		},
		"271": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.showSelectorHeader"
		},
		"272": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.showSettings"
		},
		"273": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.showSignOut"
		},
		"274": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.showTitle"
		},
		"275": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.src"
		},
		"276": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.theme"
		},
		"277": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.type"
		},
		"278": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.viewAs"
		},
		"279": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.viewTableColumns"
		},
		"280": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.waiting"
		},
		"281": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.width"
		},
		"282": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.withBreadCrumbs"
		},
		"283": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.withSearch"
		},
		"284": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.withSubtitle"
		},
		"285": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "TMessageTypes"
		},
		"286": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "TMessageData"
		},
		"287": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type"
		},
		"288": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.commandData"
		},
		"289": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.commandName"
		},
		"290": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.eventReturnData"
		},
		"291": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.frameId"
		},
		"292": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.methodReturnData"
		},
		"293": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.type"
		},
		"294": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "TEventReturnData"
		},
		"295": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type"
		},
		"296": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.data"
		},
		"297": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.event"
		},
		"298": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "TTask"
		},
		"299": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type"
		},
		"300": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.data"
		},
		"301": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.methodName"
		},
		"302": {
			"sourceFileName": "src/types/index.ts",
			"qualifiedName": "__type.type"
		},
		"303": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": ""
		},
		"304": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "SDKMode"
		},
		"305": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "SDKMode.Manager"
		},
		"306": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "SDKMode.Editor"
		},
		"307": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "SDKMode.Viewer"
		},
		"308": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "SDKMode.RoomSelector"
		},
		"309": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "SDKMode.FileSelector"
		},
		"310": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "SDKMode.System"
		},
		"311": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "SelectorFilterType"
		},
		"312": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "SelectorFilterType.All"
		},
		"313": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "SelectorFilterType.RoomsOnly"
		},
		"314": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "SelectorFilterType.UserOnly"
		},
		"315": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "EditorType"
		},
		"316": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "EditorType.Desktop"
		},
		"317": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "EditorType.Embedded"
		},
		"318": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "EditorType.Mobile"
		},
		"319": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "ManagerViewMode"
		},
		"320": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "ManagerViewMode.Row"
		},
		"321": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "ManagerViewMode.Table"
		},
		"322": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "ManagerViewMode.Tile"
		},
		"323": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "Theme"
		},
		"324": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "Theme.Base"
		},
		"325": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "Theme.Dark"
		},
		"326": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "Theme.System"
		},
		"327": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "FilterSortOrder"
		},
		"328": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "FilterSortOrder.Ascending"
		},
		"329": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "FilterSortOrder.Descending"
		},
		"330": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "FilterSortBy"
		},
		"331": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "FilterSortBy.Author"
		},
		"332": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "FilterSortBy.CreationDate"
		},
		"333": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "FilterSortBy.LastOpened"
		},
		"334": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "FilterSortBy.ModifiedDate"
		},
		"335": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "FilterSortBy.Name"
		},
		"336": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "FilterSortBy.Room"
		},
		"337": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "FilterSortBy.RoomType"
		},
		"338": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "FilterSortBy.Size"
		},
		"339": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "FilterSortBy.Tags"
		},
		"340": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "FilterSortBy.Type"
		},
		"341": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "FilterSortBy.UsedSpace"
		},
		"342": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "HeaderBannerDisplaying"
		},
		"343": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "HeaderBannerDisplaying.All"
		},
		"344": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "HeaderBannerDisplaying.Info"
		},
		"345": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "HeaderBannerDisplaying.None"
		},
		"346": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "InstanceMethods"
		},
		"347": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "InstanceMethods.AddTagsToRoom"
		},
		"348": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "InstanceMethods.CreateFile"
		},
		"349": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "InstanceMethods.CreateFolder"
		},
		"350": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "InstanceMethods.CreateHash"
		},
		"351": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "InstanceMethods.CreateRoom"
		},
		"352": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "InstanceMethods.CreateTag"
		},
		"353": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "InstanceMethods.GetFiles"
		},
		"354": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "InstanceMethods.GetFolderInfo"
		},
		"355": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "InstanceMethods.GetFolders"
		},
		"356": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "InstanceMethods.GetHashSettings"
		},
		"357": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "InstanceMethods.GetList"
		},
		"358": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "InstanceMethods.GetRooms"
		},
		"359": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "InstanceMethods.GetSelection"
		},
		"360": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "InstanceMethods.GetUserInfo"
		},
		"361": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "InstanceMethods.GetEditorInstance"
		},
		"362": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "InstanceMethods.Login"
		},
		"363": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "InstanceMethods.Logout"
		},
		"364": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "InstanceMethods.OpenModal"
		},
		"365": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "InstanceMethods.RemoveTagsFromRoom"
		},
		"366": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "InstanceMethods.SetConfig"
		},
		"367": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "InstanceMethods.SetListView"
		},
		"368": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "MessageTypes"
		},
		"369": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "MessageTypes.OnMethodReturn"
		},
		"370": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "MessageTypes.OnEventReturn"
		},
		"371": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "MessageTypes.OnCallCommand"
		},
		"372": {
			"sourceFileName": "src/enums/index.ts",
			"qualifiedName": "MessageTypes.Error"
		}
	},
	"files": {
		"entries": {
			"1": "src/index.ts",
			"2": "src/types/index.ts",
			"3": "src/enums/index.ts"
		},
		"reflections": {
			"1": 0,
			"2": 148,
			"3": 303
		}
	}
}
